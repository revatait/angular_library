
to research
public vs private
Promises: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise
async vs sync signature: https://help.sap.com/viewer/70761bba72014fb48199b9232d0d8409/7.40.17/en-US/8419ee64751947f4b3145102f309a86b.html
template literals: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals
observables: https://angular-2-training-book.rangle.io/handout/observables/using_observables.html
component interaction: https://angular.io/guide/component-interaction
RxJS
subscribe
async pipe

-- add not working?



syntax for adding sample books (json array stuffs)

https://www.thepolyglotdeveloper.com/2017/03/javascript-libraries-in-a-typescript-application-revisited/
https://www.thepolyglotdeveloper.com/2016/01/include-external-javascript-libraries-in-an-angular-2-typescript-project/

All HttpClient methods return?  an RxJS Observable of something
HTTP is what kind of protocol?  a request/response protocol - you make a request, it returns a SINGLE response
How is an Observable from HttpClient different from other Observables?  An Observable from HttpClient emits a single value and then completes, never to emit again whereas generally Observables can return multiple values over time.
What does HttpClient.get return?  the BODY of the response as an uptyped JSON object
How can you add a type to HttpClient.get's result object? By applying the optional type specifier <Book[]>
difference between backticks (`) and single quotes (')  the backtick allows you to compose a string over several lines
constructor (mdn def) a special METHOD for creating and initializing an object created within a class
how many constructor methods can be in a class? just one (or you'll get SyntaxError)
what's in a class's curly brackets? the "body" of the class, where you define methods and constructors
let   allows you to declare variables that are limited in scope to the block, statement, or expression on which it is used (this is unlike the var keyword)
const   like a var except it cannot change through re-assignment; can't be redeclared
similarity between const and let  they're block-scoped (unlike var)
what does -d flag do for angular cli? runs a command as "dry run," doesn't generate any new files just shows you what would be generated by this command without -d
term for {{   }}    interpolation
interpolation syntax  {{   }}
template expressions can refer to two things  component property and template input variable
what are template expressions?  expressions that produce a value; once executed, Angular assigns the value to a property (of a binding target - an HTML element, a component, or a directive)
template expressions cannot refer to? anything in the global namespace (like window, document, console.log) - they're restricted to referencing members of the expression context
template expressions should never  change any application state other than the value of the target property
when does angular execute template expressions? after every change detection cycle
when are change detection cycles triggered? many asynchronous activities (eg, promise resolutions, http results, timer events, keypresses, and mouse moves)
where should application log and business logic be (and not be)?  they should be in the component, NOT the template
what is an idempotent expression? an expression that always returns exactly the same thing until one of its dependent values changes
what is a template statement? a statement that responds to an event raised by a binding target (such as an element, component, or directive)
example of a template statement?  <button (click)='deleteHero()'>Delete hero</button>
what syntax requires (event)='statement()' ?  template statements
what does and what doesn't have side effects? template expressions have no side effects; template statements do have side effects (that's their whole point - events are how you update application state form a user action)
how does data binding work? you declare bindings between sources and targets
three categories of data bindings one-way (source to target); one-way (target to source); two-way
basic syntax of binding types other than interpolation  target name to the left of the sign (surrounded by punctuation OR preceded by prefix) and expression/statement to right of equal sign
what are target names in data binding?  the target name is the name of a property (never an attribute)
traditional HTML mental model you create visual structure with HTML elements and modify those elements with attributes (ie, string constants, eg href=" " or class=" ")
Angular HTML mental model (1) you create new elements/modules that have their own HTML templates and (b) you start data binding
once you start data binding, you are no longer __   working with or setting HTML attributes; you're setting properties of DOM elements, components, and directives
difference between HTML and DOM   attributes are defined by HTML; properties are defined by the DOM
how attributes work in the DOM  attributes initialize DOM properties and then they are done; they can no longer change (aot property values, which can change)
relationship between HTML attribute and DOM property? HTML attribute specifies initial value; DOM property is current value
template binding works with ___ and ____, but not ____. Template binding works with properties and events, not attributes.
when to write a template property binding?  when you want to set a property of a view element
property binding sets the property to?  the value of a template expression
most common property bindin and syntax example? sets an element property to a component property value, eg binding <img [src]='imageUrl'>



<input type='text' value="Bob">
user enters 'Sally'
return input.getAttribute('value');  // returns 'Bob'
why? because DOM element value property becomes Sally, but the HTML value attribute remains unchanged (as Bob)
